apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.arash.github"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    androidExtensions {
        experimental = true
    }
}

def dependencyGroup(Closure closure) {
    closure.delegate = dependencies
    return closure
}

def ui = dependencyGroup {
    implementation "com.android.support:appcompat-v7:$compat_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:cardview-v7:$design_version"
    implementation "com.android.support:design:$design_version"
    implementation "android.arch.paging:runtime:1.0.1"
    implementation "com.github.castorflex.smoothprogressbar:library:$smoothprogress_version"
    implementation "com.github.zagum:Android-SwitchIcon:$switchicon_version"
    implementation "us.feras.mdv:markdownview:$markdown_version"
}

def base = dependencyGroup {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

def test = dependencyGroup {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation ("com.android.support.test.espresso:espresso-intents:$espresso_version")
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espresso_version") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
}

def di = dependencyGroup {
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
}

def api = dependencyGroup {
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.github.leonardoxh:retrofit2-livedata-adapter:$livedata_adapter_version"
}

def data = dependencyGroup {
    implementation "com.orhanobut:hawk:$hawk_version"
}

def rx = dependencyGroup {
    implementation "io.reactivex.rxjava2:rxjava:$rx_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxbinding_version"
}

def arch = dependencyGroup {
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
}

def glide = dependencyGroup {
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
}

dependencies {
    base()
    rx()
    ui()
    test()
    di()
    api()
    data()
    arch()
    glide()
}
